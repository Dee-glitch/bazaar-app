{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dee\\\\Desktop\\\\test-deploy\\\\client\\\\src\\\\components\\\\Uploader.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Uploader = ({\n  data\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [selectedFiles, setSelectedFiles] = useState(null);\n\n  const toProductPage = id => {\n    history.push(`/${id}`);\n    document.getElementById('add-product-link').style.display = 'block';\n  };\n\n  const handleClick = async () => {\n    const isFilled = Object.keys(data).every(key => data[key]);\n\n    try {\n      if (!selectedFiles || !isFilled) return;\n      const videoRequests = [];\n      const imageRequests = [];\n\n      for (const file of selectedFiles) {\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('folder', process.env.REACT_APP_UPLOAD_FOLDER);\n        formData.append('upload_preset', process.env.REACT_APP_UPLOAD_PRESET);\n        const [type] = file.type.split('/');\n        const url = `https://api.cloudinary.com/v1_1/${process.env.REACT_APP_CLOUD_NAME}`;\n        if (type === 'video') videoRequests.push(axios.post(`${url}/video/upload`, formData));\n        if (type === 'image') imageRequests.push(axios.post(`${url}/image/upload`, formData));\n      }\n\n      const videoResponses = await axios.all(videoRequests);\n      const imageResponses = await axios.all(imageRequests);\n      data.videos = videoResponses.map(response => response.data.secure_url);\n      data.images = imageResponses.map(response => response.data.secure_url);\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/products/create`, data);\n      const {\n        id\n      } = response.data;\n      if (id) toProductPage(id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form.File, {\n      required: true,\n      multiple: true,\n      type: \"file\",\n      accept: \"image/*, video/*\",\n      onChange: e => setSelectedFiles(e.target.files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      className: \"w-100\",\n      onClick: handleClick,\n      style: {\n        background: 'var(--color-main)'\n      },\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Uploader, \"eiyepl3/q7hCGnqp5AY6g+ClO/4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Uploader;\nexport default Uploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"Uploader\");","map":{"version":3,"sources":["C:/Users/Dee/Desktop/test-deploy/client/src/components/Uploader.js"],"names":["axios","React","useState","Form","Button","useHistory","Uploader","data","history","selectedFiles","setSelectedFiles","toProductPage","id","push","document","getElementById","style","display","handleClick","isFilled","Object","keys","every","key","videoRequests","imageRequests","file","formData","FormData","append","process","env","REACT_APP_UPLOAD_FOLDER","REACT_APP_UPLOAD_PRESET","type","split","url","REACT_APP_CLOUD_NAME","post","videoResponses","all","imageResponses","videos","map","response","secure_url","images","REACT_APP_API_URL","error","console","e","target","files","background"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Uploader = ({ data }) => {\r\n  const history = useHistory();\r\n\r\n  const [selectedFiles, setSelectedFiles] = useState(null);\r\n\r\n  const toProductPage = (id) => {\r\n    history.push(`/${id}`);\r\n    document.getElementById('add-product-link').style.display = 'block';\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    const isFilled = Object.keys(data).every((key) => data[key]);\r\n    try {\r\n      if (!selectedFiles || !isFilled) return;\r\n\r\n      const videoRequests = [];\r\n      const imageRequests = [];\r\n\r\n      for (const file of selectedFiles) {\r\n        const formData = new FormData();\r\n\r\n        formData.append('file', file);\r\n        formData.append('folder', process.env.REACT_APP_UPLOAD_FOLDER);\r\n        formData.append('upload_preset', process.env.REACT_APP_UPLOAD_PRESET);\r\n\r\n        const [type] = file.type.split('/');\r\n        const url = `https://api.cloudinary.com/v1_1/${process.env.REACT_APP_CLOUD_NAME}`;\r\n\r\n        if (type === 'video') videoRequests.push(axios.post(`${url}/video/upload`, formData));\r\n        if (type === 'image') imageRequests.push(axios.post(`${url}/image/upload`, formData));\r\n      }\r\n\r\n      const videoResponses = await axios.all(videoRequests);\r\n      const imageResponses = await axios.all(imageRequests);\r\n\r\n      data.videos = videoResponses.map((response) => response.data.secure_url);\r\n      data.images = imageResponses.map((response) => response.data.secure_url);\r\n\r\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/products/create`, data);\r\n      const { id } = response.data;\r\n\r\n      if (id) toProductPage(id);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form.File\r\n        required\r\n        multiple\r\n        type=\"file\"\r\n        accept=\"image/*, video/*\"\r\n        onChange={(e) => setSelectedFiles(e.target.files)}\r\n      />\r\n      <br />\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        className=\"w-100\"\r\n        onClick={handleClick}\r\n        style={{ background: 'var(--color-main)' }}\r\n      >\r\n        Add Product\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Uploader;\r\n"]},"metadata":{},"sourceType":"module"}
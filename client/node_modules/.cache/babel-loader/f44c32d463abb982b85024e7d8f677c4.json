{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dee\\\\Desktop\\\\test-deploy\\\\client\\\\src\\\\components\\\\EditProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditProfile = ({\n  user\n}) => {\n  _s();\n\n  const [userData, setUserData] = useState({\n    first_name: user.first_name,\n    last_name: user.last_name,\n    email: user.email,\n    phone: user.phone,\n    avatar: user.avatar,\n    addresses: user.addresses\n  });\n  const [addressesData, setAddressesData] = useState(user.addresses.map(address => {\n    return {\n      _id: address._id,\n      first_name: address.first_name,\n      last_name: address.last_name,\n      country: address.country,\n      city: address.city,\n      street_name: address.street_name,\n      building_number: address.building_number,\n      extension: address.extension,\n      post_code: address.post_code,\n      comment: address.comment\n    };\n  }));\n  const [addressChanged, setAddressChanged] = useState('');\n  const [isUserDataChanged, setIsUserDataChanged] = useState(false);\n\n  const editData = async e => {\n    try {\n      e.preventDefault();\n\n      if (isUserDataChanged) {\n        await axios.patch(`${process.env.REACT_APP_API_URL}/users/update/${user._id}`, userData);\n        setIsUserDataChanged(false);\n      }\n\n      if (addressChanged.length > 0) {\n        const addr = addressesData.find(address => address._id == addressChanged);\n        await axios.patch(`${process.env.REACT_APP_API_URL}/addresses/update/${addressChanged}`, addr);\n        setAddressChanged('');\n      }\n\n      alert('Successfully updated!');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const [deleteId, setDeleteId] = useState('');\n  useEffect(() => {\n    if (deleteId.length > 0) {\n      (async () => {\n        try {\n          await axios.patch(`${process.env.REACT_APP_API_URL}/addresses/delete/${deleteId}/${user._id}`, {\n            addresses: userData.addresses\n          });\n          alert('Address is deleted!');\n        } catch (err) {\n          console.log(err);\n        }\n      })();\n    }\n  }, [deleteId]);\n  const [newAddress, setNewAddress] = useState({\n    user: user._id,\n    first_name: '',\n    last_name: '',\n    country: '',\n    city: '',\n    street_name: '',\n    building_number: '',\n    extension: '',\n    post_code: '',\n    comment: ''\n  });\n\n  const addAddress = async e => {\n    try {\n      e.preventDefault();\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/addresses/create`, newAddress);\n      const addressAdded = {\n        _id: response.data.address._id,\n        first_name: response.data.address.first_name,\n        last_name: response.data.address.last_name,\n        country: response.data.address.country,\n        city: response.data.address.city,\n        street_name: response.data.address.street_name,\n        building_number: response.data.address.building_number,\n        extension: response.data.address.extension,\n        post_code: response.data.address.post_code,\n        comment: response.data.address.comment\n      };\n      setAddressesData(oldArr => [...oldArr, addressAdded]);\n      setUserData({ ...userData,\n        addresses: [...userData.addresses, addressAdded]\n      });\n      setNewAddress({\n        user: user._id,\n        first_name: '',\n        last_name: '',\n        country: '',\n        city: '',\n        street_name: '',\n        building_number: '',\n        extension: '',\n        post_code: '',\n        comment: ''\n      });\n      alert('Address is added!');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  let addresses = [];\n\n  if (addressesData) {\n    addresses = addressesData.map((address, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          borderColor: 'var(--color-main)'\n        },\n        className: \"m-3 p-3\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Address \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              textAlign: 'right'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              style: {\n                width: '10em'\n              },\n              onClick: () => {\n                setUserData({ ...userData,\n                  addresses: userData.addresses.filter(addr => addr._id !== address._id)\n                });\n                setAddressesData(oldArr => oldArr.filter(addr => addr._id !== address._id));\n                setDeleteId(address._id);\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Recipient (if the name is different from yours)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"First Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: address.first_name,\n            onChange: e => {\n              setAddressesData(oldArr => {\n                const newArr = oldArr.map(item => {\n                  if (item._id == address._id) {\n                    item.first_name = e.target.value;\n                  }\n\n                  return item;\n                });\n                return newArr;\n              });\n              setAddressChanged(address._id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Last Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: address.last_name,\n            onChange: e => {\n              setAddressesData(oldArr => {\n                const newArr = oldArr.map(item => {\n                  if (item._id == address._id) {\n                    item.last_name = e.target.value;\n                  }\n\n                  return item;\n                });\n                return newArr;\n              });\n              setAddressChanged(address._id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Country:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: address.country,\n            onChange: e => {\n              setAddressesData(oldArr => {\n                const newArr = oldArr.map(item => {\n                  if (item._id == address._id) {\n                    item.country = e.target.value;\n                  }\n\n                  return item;\n                });\n                return newArr;\n              });\n              setAddressChanged(address._id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: address.city,\n            onChange: e => {\n              setAddressesData(oldArr => {\n                const newArr = oldArr.map(item => {\n                  if (item._id == address._id) {\n                    item.city = e.target.value;\n                  }\n\n                  return item;\n                });\n                return newArr;\n              });\n              setAddressChanged(address._id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Street:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: address.street_name,\n            onChange: e => {\n              setAddressesData(oldArr => {\n                const newArr = oldArr.map(item => {\n                  if (item._id == address._id) {\n                    item.street_name = e.target.value;\n                  }\n\n                  return item;\n                });\n                return newArr;\n              });\n              setAddressChanged(address._id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Building Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: address.building_number,\n            onChange: e => {\n              setAddressesData(oldArr => {\n                const newArr = oldArr.map(item => {\n                  if (item._id == address._id) {\n                    item.building_number = e.target.value;\n                  }\n\n                  return item;\n                });\n                return newArr;\n              });\n              setAddressChanged(address._id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Extension:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: address.extension,\n            onChange: e => {\n              setAddressesData(oldArr => {\n                const newArr = oldArr.map(item => {\n                  if (item._id == address._id) {\n                    item.extension = e.target.value;\n                  }\n\n                  return item;\n                });\n                return newArr;\n              });\n              setAddressChanged(address._id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Postal code:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: address.post_code,\n            onChange: e => {\n              setAddressesData(oldArr => {\n                const newArr = oldArr.map(item => {\n                  if (item._id == address._id) {\n                    item.post_code = e.target.value;\n                  }\n\n                  return item;\n                });\n                return newArr;\n              });\n              setAddressChanged(address._id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Comment:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: address.comment,\n            onChange: e => {\n              setAddressesData(oldArr => {\n                const newArr = oldArr.map(item => {\n                  if (item._id == address._id) {\n                    item.comment = e.target.value;\n                  }\n\n                  return item;\n                });\n                return newArr;\n              });\n              setAddressChanged(address._id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, address._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: editData,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"First Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: userData.first_name,\n          onChange: e => {\n            setUserData({ ...userData,\n              first_name: e.target.value\n            });\n            setIsUserDataChanged(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Last Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: userData.last_name,\n          onChange: e => {\n            setUserData({ ...userData,\n              last_name: e.target.value\n            });\n            setIsUserDataChanged(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: userData.email,\n          onChange: e => {\n            setUserData({ ...userData,\n              email: e.target.value\n            });\n            setIsUserDataChanged(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Phone Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: userData.phone,\n          onChange: e => {\n            setUserData({ ...userData,\n              phone: e.target.value\n            });\n            setIsUserDataChanged(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => {\n            setUserData({ ...userData,\n              password: e.target.value\n            });\n            setIsUserDataChanged(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), addresses, /*#__PURE__*/_jsxDEV(Button, {\n        className: \"w-100\",\n        type: \"submit\",\n        style: {\n          background: 'var(--color-main)'\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mt-3\",\n      children: \"Add new address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: addAddress,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          borderColor: 'var(--color-main)'\n        },\n        className: \"m-3 p-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Recipient (if the name is different from yours)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"First Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: newAddress.first_name,\n            onChange: e => {\n              setNewAddress({ ...newAddress,\n                first_name: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Last Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: newAddress.last_name,\n            onChange: e => {\n              setNewAddress({ ...newAddress,\n                last_name: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Country: *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            value: newAddress.country,\n            onChange: e => {\n              setNewAddress({ ...newAddress,\n                country: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"City: *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            value: newAddress.city,\n            onChange: e => {\n              setNewAddress({ ...newAddress,\n                city: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Street: *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            value: newAddress.street_name,\n            onChange: e => {\n              setNewAddress({ ...newAddress,\n                street_name: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Building Number: *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            value: newAddress.building_number,\n            onChange: e => {\n              setNewAddress({ ...newAddress,\n                building_number: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Extension:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: newAddress.extension,\n            onChange: e => {\n              setNewAddress({ ...newAddress,\n                extension: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Postal code: *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            value: newAddress.post_code,\n            onChange: e => {\n              setNewAddress({ ...newAddress,\n                post_code: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Comment:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: newAddress.comment,\n            onChange: e => {\n              setNewAddress({ ...newAddress,\n                comment: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"w-100\",\n        type: \"submit\",\n        style: {\n          background: 'var(--color-main)'\n        },\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 333,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditProfile, \"CCxvVU9KjlSOOIbDqH4NaqHlD44=\");\n\n_c = EditProfile;\nexport default EditProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfile\");","map":{"version":3,"sources":["C:/Users/Dee/Desktop/test-deploy/client/src/components/EditProfile.js"],"names":["React","useState","useEffect","Container","Row","Col","Card","Form","Button","axios","EditProfile","user","userData","setUserData","first_name","last_name","email","phone","avatar","addresses","addressesData","setAddressesData","map","address","_id","country","city","street_name","building_number","extension","post_code","comment","addressChanged","setAddressChanged","isUserDataChanged","setIsUserDataChanged","editData","e","preventDefault","patch","process","env","REACT_APP_API_URL","length","addr","find","alert","err","console","log","deleteId","setDeleteId","newAddress","setNewAddress","addAddress","response","post","addressAdded","data","oldArr","index","borderColor","textAlign","width","filter","newArr","item","target","value","password","background"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Card, Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst EditProfile = ({ user }) => {\r\n  const [userData, setUserData] = useState({\r\n    first_name: user.first_name,\r\n    last_name: user.last_name,\r\n    email: user.email,\r\n    phone: user.phone,\r\n    avatar: user.avatar,\r\n    addresses: user.addresses,\r\n  });\r\n\r\n  const [addressesData, setAddressesData] = useState(\r\n    user.addresses.map((address) => {\r\n      return {\r\n        _id: address._id,\r\n        first_name: address.first_name,\r\n        last_name: address.last_name,\r\n        country: address.country,\r\n        city: address.city,\r\n        street_name: address.street_name,\r\n        building_number: address.building_number,\r\n        extension: address.extension,\r\n        post_code: address.post_code,\r\n        comment: address.comment,\r\n      };\r\n    }),\r\n  );\r\n  const [addressChanged, setAddressChanged] = useState('');\r\n  const [isUserDataChanged, setIsUserDataChanged] = useState(false);\r\n\r\n  const editData = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      if (isUserDataChanged) {\r\n        await axios.patch(`${process.env.REACT_APP_API_URL}/users/update/${user._id}`, userData);\r\n        setIsUserDataChanged(false);\r\n      }\r\n      if (addressChanged.length > 0) {\r\n        const addr = addressesData.find((address) => address._id == addressChanged);\r\n        await axios.patch(\r\n          `${process.env.REACT_APP_API_URL}/addresses/update/${addressChanged}`,\r\n          addr,\r\n        );\r\n        setAddressChanged('');\r\n      }\r\n      alert('Successfully updated!');\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const [deleteId, setDeleteId] = useState('');\r\n  useEffect(() => {\r\n    if (deleteId.length > 0) {\r\n      (async () => {\r\n        try {\r\n          await axios.patch(\r\n            `${process.env.REACT_APP_API_URL}/addresses/delete/${deleteId}/${user._id}`,\r\n            { addresses: userData.addresses },\r\n          );\r\n          alert('Address is deleted!');\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      })();\r\n    }\r\n  }, [deleteId]);\r\n\r\n  const [newAddress, setNewAddress] = useState({\r\n    user: user._id,\r\n    first_name: '',\r\n    last_name: '',\r\n    country: '',\r\n    city: '',\r\n    street_name: '',\r\n    building_number: '',\r\n    extension: '',\r\n    post_code: '',\r\n    comment: '',\r\n  });\r\n\r\n  const addAddress = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/addresses/create`,\r\n        newAddress,\r\n      );\r\n\r\n      const addressAdded = {\r\n        _id: response.data.address._id,\r\n        first_name: response.data.address.first_name,\r\n        last_name: response.data.address.last_name,\r\n        country: response.data.address.country,\r\n        city: response.data.address.city,\r\n        street_name: response.data.address.street_name,\r\n        building_number: response.data.address.building_number,\r\n        extension: response.data.address.extension,\r\n        post_code: response.data.address.post_code,\r\n        comment: response.data.address.comment,\r\n      };\r\n      setAddressesData((oldArr) => [...oldArr, addressAdded]);\r\n      setUserData({\r\n        ...userData,\r\n        addresses: [...userData.addresses, addressAdded],\r\n      });\r\n      setNewAddress({\r\n        user: user._id,\r\n        first_name: '',\r\n        last_name: '',\r\n        country: '',\r\n        city: '',\r\n        street_name: '',\r\n        building_number: '',\r\n        extension: '',\r\n        post_code: '',\r\n        comment: '',\r\n      });\r\n      alert('Address is added!');\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  let addresses = [];\r\n  if (addressesData) {\r\n    addresses = addressesData.map((address, index) => {\r\n      return (\r\n        <Card style={{ borderColor: 'var(--color-main)' }} key={address._id} className=\"m-3 p-3\">\r\n          <Row>\r\n            <Col>\r\n              <h4>Address {index + 1}</h4>\r\n            </Col>\r\n            <Col style={{ textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"danger\"\r\n                style={{ width: '10em' }}\r\n                onClick={() => {\r\n                  setUserData({\r\n                    ...userData,\r\n                    addresses: userData.addresses.filter((addr) => addr._id !== address._id),\r\n                  });\r\n                  setAddressesData((oldArr) => oldArr.filter((addr) => addr._id !== address._id));\r\n                  setDeleteId(address._id);\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Form.Group>\r\n            <Form.Label>Recipient (if the name is different from yours)</Form.Label>\r\n            <br />\r\n            <Form.Label>First Name:</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={address.first_name}\r\n              onChange={(e) => {\r\n                setAddressesData((oldArr) => {\r\n                  const newArr = oldArr.map((item) => {\r\n                    if (item._id == address._id) {\r\n                      item.first_name = e.target.value;\r\n                    }\r\n                    return item;\r\n                  });\r\n                  return newArr;\r\n                });\r\n                setAddressChanged(address._id);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Last Name:</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={address.last_name}\r\n              onChange={(e) => {\r\n                setAddressesData((oldArr) => {\r\n                  const newArr = oldArr.map((item) => {\r\n                    if (item._id == address._id) {\r\n                      item.last_name = e.target.value;\r\n                    }\r\n                    return item;\r\n                  });\r\n                  return newArr;\r\n                });\r\n                setAddressChanged(address._id);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Country:</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={address.country}\r\n              onChange={(e) => {\r\n                setAddressesData((oldArr) => {\r\n                  const newArr = oldArr.map((item) => {\r\n                    if (item._id == address._id) {\r\n                      item.country = e.target.value;\r\n                    }\r\n                    return item;\r\n                  });\r\n                  return newArr;\r\n                });\r\n                setAddressChanged(address._id);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>City:</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={address.city}\r\n              onChange={(e) => {\r\n                setAddressesData((oldArr) => {\r\n                  const newArr = oldArr.map((item) => {\r\n                    if (item._id == address._id) {\r\n                      item.city = e.target.value;\r\n                    }\r\n                    return item;\r\n                  });\r\n                  return newArr;\r\n                });\r\n                setAddressChanged(address._id);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Street:</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={address.street_name}\r\n              onChange={(e) => {\r\n                setAddressesData((oldArr) => {\r\n                  const newArr = oldArr.map((item) => {\r\n                    if (item._id == address._id) {\r\n                      item.street_name = e.target.value;\r\n                    }\r\n                    return item;\r\n                  });\r\n                  return newArr;\r\n                });\r\n                setAddressChanged(address._id);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Building Number:</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={address.building_number}\r\n              onChange={(e) => {\r\n                setAddressesData((oldArr) => {\r\n                  const newArr = oldArr.map((item) => {\r\n                    if (item._id == address._id) {\r\n                      item.building_number = e.target.value;\r\n                    }\r\n                    return item;\r\n                  });\r\n                  return newArr;\r\n                });\r\n                setAddressChanged(address._id);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Extension:</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={address.extension}\r\n              onChange={(e) => {\r\n                setAddressesData((oldArr) => {\r\n                  const newArr = oldArr.map((item) => {\r\n                    if (item._id == address._id) {\r\n                      item.extension = e.target.value;\r\n                    }\r\n                    return item;\r\n                  });\r\n                  return newArr;\r\n                });\r\n                setAddressChanged(address._id);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Postal code:</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={address.post_code}\r\n              onChange={(e) => {\r\n                setAddressesData((oldArr) => {\r\n                  const newArr = oldArr.map((item) => {\r\n                    if (item._id == address._id) {\r\n                      item.post_code = e.target.value;\r\n                    }\r\n                    return item;\r\n                  });\r\n                  return newArr;\r\n                });\r\n                setAddressChanged(address._id);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Comment:</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={address.comment}\r\n              onChange={(e) => {\r\n                setAddressesData((oldArr) => {\r\n                  const newArr = oldArr.map((item) => {\r\n                    if (item._id == address._id) {\r\n                      item.comment = e.target.value;\r\n                    }\r\n                    return item;\r\n                  });\r\n                  return newArr;\r\n                });\r\n                setAddressChanged(address._id);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n        </Card>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={editData}>\r\n        <Form.Group>\r\n          <Form.Label>First Name:</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={userData.first_name}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, first_name: e.target.value });\r\n              setIsUserDataChanged(true);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Last Name:</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={userData.last_name}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, last_name: e.target.value });\r\n              setIsUserDataChanged(true);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Email:</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={userData.email}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, email: e.target.value });\r\n              setIsUserDataChanged(true);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Phone Number:</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={userData.phone}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, phone: e.target.value });\r\n              setIsUserDataChanged(true);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Password:</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, password: e.target.value });\r\n              setIsUserDataChanged(true);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n\r\n        {addresses}\r\n\r\n        <Button className=\"w-100\" type=\"submit\" style={{ background: 'var(--color-main)' }}>\r\n          Save\r\n        </Button>\r\n      </Form>\r\n      <hr />\r\n      <h4 className=\"mt-3\">Add new address</h4>\r\n      <Form onSubmit={addAddress}>\r\n        <Card style={{ borderColor: 'var(--color-main)' }} className=\"m-3 p-3\">\r\n          <Form.Group>\r\n            <Form.Label>Recipient (if the name is different from yours)</Form.Label>\r\n            <br />\r\n            <Form.Label>First Name:</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={newAddress.first_name}\r\n              onChange={(e) => {\r\n                setNewAddress({ ...newAddress, first_name: e.target.value });\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Last Name:</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={newAddress.last_name}\r\n              onChange={(e) => {\r\n                setNewAddress({ ...newAddress, last_name: e.target.value });\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Country: *</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              value={newAddress.country}\r\n              onChange={(e) => {\r\n                setNewAddress({ ...newAddress, country: e.target.value });\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>City: *</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              value={newAddress.city}\r\n              onChange={(e) => {\r\n                setNewAddress({ ...newAddress, city: e.target.value });\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Street: *</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              value={newAddress.street_name}\r\n              onChange={(e) => {\r\n                setNewAddress({ ...newAddress, street_name: e.target.value });\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Building Number: *</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              value={newAddress.building_number}\r\n              onChange={(e) => {\r\n                setNewAddress({ ...newAddress, building_number: e.target.value });\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Extension:</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={newAddress.extension}\r\n              onChange={(e) => {\r\n                setNewAddress({ ...newAddress, extension: e.target.value });\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Postal code: *</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              value={newAddress.post_code}\r\n              onChange={(e) => {\r\n                setNewAddress({ ...newAddress, post_code: e.target.value });\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Comment:</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={newAddress.comment}\r\n              onChange={(e) => {\r\n                setNewAddress({ ...newAddress, comment: e.target.value });\r\n              }}\r\n            />\r\n          </Form.Group>\r\n        </Card>\r\n        <Button className=\"w-100\" type=\"submit\" style={{ background: 'var(--color-main)' }}>\r\n          Add\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n"]},"metadata":{},"sourceType":"module"}
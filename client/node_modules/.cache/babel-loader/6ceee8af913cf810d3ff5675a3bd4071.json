{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Dee/Desktop/test-deploy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Dee/Desktop/test-deploy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useContext}from'react';import{Card}from'react-bootstrap';import{useHistory}from'react-router-dom';import GoogleLogin from'react-google-login';import{AuthContext}from'../context/AuthContext';import axios from'axios';import GoogleButton from'react-google-button';import{jsx as _jsx}from\"react/jsx-runtime\";var GoogleSignIn=function GoogleSignIn(){var _useContext=useContext(AuthContext),dispatch=_useContext.dispatch;var GOOGLE_CLIENT_ID=process.env.GOOGLE_CLIENT_ID;var history=useHistory();function responseGoogle(_x){return _responseGoogle.apply(this,arguments);}function _responseGoogle(){_responseGoogle=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(response){var res,loginCall;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:loginCall=function _loginCall(userCredential,dispatch){dispatch({type:'LOGIN_START'});try{dispatch({type:\"LOGIN_SUCCESS\",payload:res.data});history.push('/');}catch(err){dispatch({type:\"LOGIN_FAILURE\",payload:err.response.data});}};_context.next=3;return axios({method:'POST',url:\"\".concat(process.env.REACT_APP_API_URL,\"/users/googleLogin\"),data:{accessToken:response.accessToken,userID:response.Zb.id_token,email:response.profileObj.email}});case 3:res=_context.sent;loginCall({email:res.data.email,password:res.data.password},dispatch);case 5:case\"end\":return _context.stop();}}},_callee);}));return _responseGoogle.apply(this,arguments);}return/*#__PURE__*/_jsx(Card,{style:{width:'350px'},children:/*#__PURE__*/_jsx(Card.Header,{style:{margin:'0 auto'},children:/*#__PURE__*/_jsx(GoogleLogin,{clientId:GOOGLE_CLIENT_ID,onSuccess:responseGoogle,onFailure:responseGoogle,cookiePolicy:'single_host_origin',render:function render(renderProps){return/*#__PURE__*/_jsx(GoogleButton,{onClick:renderProps.onClick,disabled:renderProps.disabled,label:\"LOGIN WITH GOOGLE\",style:{width:'310px',paddingLeft:'30px'}});}})})});};export default GoogleSignIn;","map":{"version":3,"sources":["C:/Users/Dee/Desktop/test-deploy/client/src/components/GoogleSignIn.js"],"names":["React","useContext","Card","useHistory","GoogleLogin","AuthContext","axios","GoogleButton","GoogleSignIn","dispatch","GOOGLE_CLIENT_ID","process","env","history","responseGoogle","response","loginCall","userCredential","type","payload","res","data","push","err","method","url","REACT_APP_API_URL","accessToken","userID","Zb","id_token","email","profileObj","password","width","margin","renderProps","onClick","disabled","paddingLeft"],"mappings":"yTAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,IAAT,KAAqB,iBAArB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,oBAAxB,CACA,OAASC,WAAT,KAA4B,wBAA5B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,qBAAzB,C,2CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,gBAAqBP,UAAU,CAACI,WAAD,CAA/B,CAAQI,QAAR,aAAQA,QAAR,CACA,GAAMC,CAAAA,gBAAgB,CAAGC,OAAO,CAACC,GAAR,CAAYF,gBAArC,CACA,GAAMG,CAAAA,OAAO,CAAGV,UAAU,EAA1B,CAHyB,QAIVW,CAAAA,cAJU,sJAIzB,iBAA8BC,QAA9B,UAWWC,SAXX,iHAWWA,SAXX,qBAWqBC,cAXrB,CAWqCR,QAXrC,CAW+C,CAC3CA,QAAQ,CAAC,CAAES,IAAI,CAAE,aAAR,CAAD,CAAR,CACA,GAAI,CACFT,QAAQ,CAAC,CAAES,IAAI,gBAAN,CAAyBC,OAAO,CAAEC,GAAG,CAACC,IAAtC,CAAD,CAAR,CACAR,OAAO,CAACS,IAAR,CAAa,GAAb,EACD,CAAC,MAAOC,GAAP,CAAY,CACZd,QAAQ,CAAC,CAAES,IAAI,gBAAN,CAAyBC,OAAO,CAAEI,GAAG,CAACR,QAAJ,CAAaM,IAA/C,CAAD,CAAR,CACD,CACF,CAnBH,uBACoBf,CAAAA,KAAK,CAAC,CACtBkB,MAAM,CAAE,MADc,CAEtBC,GAAG,WAAKd,OAAO,CAACC,GAAR,CAAYc,iBAAjB,sBAFmB,CAGtBL,IAAI,CAAE,CACJM,WAAW,CAAEZ,QAAQ,CAACY,WADlB,CAEJC,MAAM,CAAEb,QAAQ,CAACc,EAAT,CAAYC,QAFhB,CAGJC,KAAK,CAAEhB,QAAQ,CAACiB,UAAT,CAAoBD,KAHvB,CAHgB,CAAD,CADzB,QACQX,GADR,eAoBEJ,SAAS,CAAC,CAAEe,KAAK,CAAEX,GAAG,CAACC,IAAJ,CAASU,KAAlB,CAAyBE,QAAQ,CAAEb,GAAG,CAACC,IAAJ,CAASY,QAA5C,CAAD,CAAyDxB,QAAzD,CAAT,CApBF,sDAJyB,iDA0BzB,mBACE,KAAC,IAAD,EAAM,KAAK,CAAE,CAAEyB,KAAK,CAAE,OAAT,CAAb,uBACE,KAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,CAAEC,MAAM,CAAE,QAAV,CAApB,uBACE,KAAC,WAAD,EACE,QAAQ,CAAEzB,gBADZ,CAEE,SAAS,CAAEI,cAFb,CAGE,SAAS,CAAEA,cAHb,CAIE,YAAY,CAAE,oBAJhB,CAKE,MAAM,CAAE,gBAACsB,WAAD,qBACN,KAAC,YAAD,EACE,OAAO,CAAEA,WAAW,CAACC,OADvB,CAEE,QAAQ,CAAED,WAAW,CAACE,QAFxB,CAGE,KAAK,CAAC,mBAHR,CAIE,KAAK,CAAE,CAAEJ,KAAK,CAAE,OAAT,CAAkBK,WAAW,CAAE,MAA/B,CAJT,EADM,EALV,EADF,EADF,EADF,CAoBD,CA9CD,CAgDA,cAAe/B,CAAAA,YAAf","sourcesContent":["import React, { useContext } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport axios from 'axios';\r\nimport GoogleButton from 'react-google-button';\r\n\r\nconst GoogleSignIn = () => {\r\n  const { dispatch } = useContext(AuthContext);\r\n  const GOOGLE_CLIENT_ID = process.env.GOOGLE_CLIENT_ID;\r\n  const history = useHistory();\r\n  async function responseGoogle(response) {\r\n    const res = await axios({\r\n      method: 'POST',\r\n      url: `${process.env.REACT_APP_API_URL}/users/googleLogin`,\r\n      data: {\r\n        accessToken: response.accessToken,\r\n        userID: response.Zb.id_token,\r\n        email: response.profileObj.email,\r\n      },\r\n    });\r\n\r\n    function loginCall(userCredential, dispatch) {\r\n      dispatch({ type: 'LOGIN_START' });\r\n      try {\r\n        dispatch({ type: `LOGIN_SUCCESS`, payload: res.data });\r\n        history.push('/');\r\n      } catch (err) {\r\n        dispatch({ type: `LOGIN_FAILURE`, payload: err.response.data });\r\n      }\r\n    }\r\n    loginCall({ email: res.data.email, password: res.data.password }, dispatch);\r\n  }\r\n  return (\r\n    <Card style={{ width: '350px' }}>\r\n      <Card.Header style={{ margin: '0 auto' }}>\r\n        <GoogleLogin\r\n          clientId={GOOGLE_CLIENT_ID}\r\n          onSuccess={responseGoogle}\r\n          onFailure={responseGoogle}\r\n          cookiePolicy={'single_host_origin'}\r\n          render={(renderProps) => (\r\n            <GoogleButton\r\n              onClick={renderProps.onClick}\r\n              disabled={renderProps.disabled}\r\n              label=\"LOGIN WITH GOOGLE\"\r\n              style={{ width: '310px', paddingLeft: '30px' }}\r\n            />\r\n          )}\r\n        />\r\n      </Card.Header>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GoogleSignIn;\r\n"]},"metadata":{},"sourceType":"module"}
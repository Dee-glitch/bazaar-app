{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dee\\\\Desktop\\\\test-deploy\\\\client\\\\src\\\\components\\\\Payment.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { loadStripe } from '@stripe/stripe-js';\nimport React, { useState, useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { Form, Alert, Button } from 'react-bootstrap';\nimport { Elements, CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PaymentForm = ({\n  product,\n  shippingAddress\n}) => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const CARD_OPTIONS = {\n    iconStyle: 'solid',\n    style: {\n      base: {\n        color: '#32325d',\n        fontSize: '1.2rem',\n        iconColor: '#32325d',\n        fontFamily: 'Arial',\n        fontSmoothing: 'antialiased',\n        '::placeholder': {\n          color: '#cccccc'\n        },\n        ':-webkit-autofill': {\n          color: '#fce883'\n        }\n      },\n      invalid: {\n        color: '#fa755a',\n        iconColor: '#fa755a'\n      }\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(`${process.env.REACT_APP_API_URL}/orders/checkout`, {\n          id,\n          user: user._id,\n          product: product._id,\n          amount: product.price,\n          address: shippingAddress._id\n        });\n\n        if (response.data.success) {\n          setSuccess(true);\n          document.getElementById('addresses_dropdown').disabled = true;\n        }\n      } catch (error) {\n        console.error(`Error ${error}`);\n      }\n    } else {\n      console.error(error.message);\n    }\n\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !success ? /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {\n        options: CARD_OPTIONS\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: loading || !shippingAddress,\n        style: {\n          width: '100%',\n          marginTop: '10px',\n          background: 'var(--color-main)'\n        },\n        children: \"Pay now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: \"Thank you!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(PaymentForm, \"i6Ba4ffE6hsa1ocgxB9SIA8tz7w=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\n\nconst Payment = ({\n  product,\n  shippingAddress\n}) => {\n  const stripePromise = loadStripe(process.env.REACT_APP_PUBLIC_KEY);\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(PaymentForm, {\n      product: product,\n      shippingAddress: shippingAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Payment;\nexport default Payment;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PaymentForm\");\n$RefreshReg$(_c2, \"Payment\");","map":{"version":3,"sources":["C:/Users/Dee/Desktop/test-deploy/client/src/components/Payment.js"],"names":["axios","loadStripe","React","useState","useContext","AuthContext","Form","Alert","Button","Elements","CardElement","useElements","useStripe","PaymentForm","product","shippingAddress","stripe","elements","user","success","setSuccess","loading","setLoading","CARD_OPTIONS","iconStyle","style","base","color","fontSize","iconColor","fontFamily","fontSmoothing","invalid","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","process","env","REACT_APP_API_URL","_id","amount","price","address","data","document","getElementById","disabled","console","message","width","marginTop","background","Payment","stripePromise","REACT_APP_PUBLIC_KEY"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,iBAApC;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,EAA6CC,SAA7C,QAA8D,yBAA9D;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAkC;AAAA;;AACpD,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAMK,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAWd,UAAU,CAACC,WAAD,CAA3B;AAEA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMoB,YAAY,GAAG;AACnBC,IAAAA,SAAS,EAAE,OADQ;AAEnBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,SADH;AAEJC,QAAAA,QAAQ,EAAE,QAFN;AAGJC,QAAAA,SAAS,EAAE,SAHP;AAIJC,QAAAA,UAAU,EAAE,OAJR;AAKJC,QAAAA,aAAa,EAAE,aALX;AAMJ,yBAAiB;AAAEJ,UAAAA,KAAK,EAAE;AAAT,SANb;AAOJ,6BAAqB;AAAEA,UAAAA,KAAK,EAAE;AAAT;AAPjB,OADD;AAULK,MAAAA,OAAO,EAAE;AACPL,QAAAA,KAAK,EAAE,SADA;AAEPE,QAAAA,SAAS,EAAE;AAFJ;AAVJ;AAFY,GAArB;;AAmBA,QAAMI,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACAb,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAM;AAAEc,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAA2B,MAAMrB,MAAM,CAACsB,mBAAP,CAA2B;AAChEC,MAAAA,IAAI,EAAE,MAD0D;AAEhEC,MAAAA,IAAI,EAAEvB,QAAQ,CAACwB,UAAT,CAAoB/B,WAApB;AAF0D,KAA3B,CAAvC;;AAKA,QAAI,CAAC0B,KAAL,EAAY;AACV,UAAI;AACF,cAAM;AAAEM,UAAAA;AAAF,YAASL,aAAf;AACA,cAAMM,QAAQ,GAAG,MAAM3C,KAAK,CAAC4C,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,kBAA5C,EAA+D;AACpFL,UAAAA,EADoF;AAEpFxB,UAAAA,IAAI,EAAEA,IAAI,CAAC8B,GAFyE;AAGpFlC,UAAAA,OAAO,EAAEA,OAAO,CAACkC,GAHmE;AAIpFC,UAAAA,MAAM,EAAEnC,OAAO,CAACoC,KAJoE;AAKpFC,UAAAA,OAAO,EAAEpC,eAAe,CAACiC;AAL2D,SAA/D,CAAvB;;AAQA,YAAIL,QAAQ,CAACS,IAAT,CAAcjC,OAAlB,EAA2B;AACzBC,UAAAA,UAAU,CAAC,IAAD,CAAV;AACAiC,UAAAA,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA8CC,QAA9C,GAAyD,IAAzD;AACD;AACF,OAdD,CAcE,OAAOnB,KAAP,EAAc;AACdoB,QAAAA,OAAO,CAACpB,KAAR,CAAe,SAAQA,KAAM,EAA7B;AACD;AACF,KAlBD,MAkBO;AACLoB,MAAAA,OAAO,CAACpB,KAAR,CAAcA,KAAK,CAACqB,OAApB;AACD;;AAEDnC,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAhCD;;AAkCA,sBACE;AAAA,cACG,CAACH,OAAD,gBACC,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEc,YAAhB;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEV;AAAtB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,QAAQ,EAAEF,OAAO,IAAI,CAACN,eAFxB;AAGE,QAAA,KAAK,EAAE;AACL2C,UAAAA,KAAK,EAAE,MADF;AAELC,UAAAA,SAAS,EAAE,MAFN;AAGLC,UAAAA,UAAU,EAAE;AAHP,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAgBC,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBJ,mBADF;AAsBD,CApFD;;GAAM/C,W;UACWD,S,EACED,W;;;KAFbE,W;;AAsFN,MAAMgD,OAAO,GAAG,CAAC;AAAE/C,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAkC;AAChD,QAAM+C,aAAa,GAAG7D,UAAU,CAAC4C,OAAO,CAACC,GAAR,CAAYiB,oBAAb,CAAhC;AAEA,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAED,aAAlB;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEhD,OAAtB;AAA+B,MAAA,eAAe,EAAEC;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARD;;MAAM8C,O;AAUN,eAAeA,OAAf","sourcesContent":["import axios from 'axios';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport React, { useState, useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { Form, Alert, Button } from 'react-bootstrap';\r\nimport { Elements, CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\n\r\nconst PaymentForm = ({ product, shippingAddress }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const [success, setSuccess] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const CARD_OPTIONS = {\r\n    iconStyle: 'solid',\r\n    style: {\r\n      base: {\r\n        color: '#32325d',\r\n        fontSize: '1.2rem',\r\n        iconColor: '#32325d',\r\n        fontFamily: 'Arial',\r\n        fontSmoothing: 'antialiased',\r\n        '::placeholder': { color: '#cccccc' },\r\n        ':-webkit-autofill': { color: '#fce883' },\r\n      },\r\n      invalid: {\r\n        color: '#fa755a',\r\n        iconColor: '#fa755a',\r\n      },\r\n    },\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n    });\r\n\r\n    if (!error) {\r\n      try {\r\n        const { id } = paymentMethod;\r\n        const response = await axios.post(`${process.env.REACT_APP_API_URL}/orders/checkout`, {\r\n          id,\r\n          user: user._id,\r\n          product: product._id,\r\n          amount: product.price,\r\n          address: shippingAddress._id,\r\n        });\r\n\r\n        if (response.data.success) {\r\n          setSuccess(true);\r\n          document.getElementById('addresses_dropdown').disabled = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error ${error}`);\r\n      }\r\n    } else {\r\n      console.error(error.message);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!success ? (\r\n        <Form onSubmit={handleSubmit}>\r\n          <CardElement options={CARD_OPTIONS} />\r\n          <Button\r\n            type=\"submit\"\r\n            disabled={loading || !shippingAddress}\r\n            style={{\r\n              width: '100%',\r\n              marginTop: '10px',\r\n              background: 'var(--color-main)',\r\n            }}\r\n          >\r\n            Pay now\r\n          </Button>\r\n        </Form>\r\n      ) : (\r\n        <Alert variant=\"success\">Thank you!</Alert>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Payment = ({ product, shippingAddress }) => {\r\n  const stripePromise = loadStripe(process.env.REACT_APP_PUBLIC_KEY);\r\n\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n      <PaymentForm product={product} shippingAddress={shippingAddress} />\r\n    </Elements>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n"]},"metadata":{},"sourceType":"module"}
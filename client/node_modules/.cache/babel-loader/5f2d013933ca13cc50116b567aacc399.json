{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dee\\\\Desktop\\\\test-deploy\\\\client\\\\src\\\\components\\\\AddressesDropdown.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport AddressForm from '../components/AddressForm';\nimport { AuthContext } from '../context/AuthContext';\nimport React, { useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddressesDropdown = ({\n  getShippingAddress\n}) => {\n  _s();\n\n  const {\n    user\n  } = useContext(AuthContext);\n  const [addresses, setAddresses] = useState(null);\n  const [shippingAddress, setShippingAddress] = useState(null);\n  useEffect(() => fetchAddresses(), [shippingAddress]);\n\n  const fetchAddresses = async () => {\n    const response = await axios.get(`${process.env.REACT_APP_API_URL}/addresses/all/${user._id}`);\n    setAddresses(response.data.addresses);\n  };\n\n  const handleClick = e => {\n    const selectedAddress = addresses.find(address => address._id === e.target.id);\n    setShippingAddress(selectedAddress);\n  };\n\n  const getNewAddress = address => setShippingAddress(address); // set it on the parent component (checkoutPage) if the user choose one of the recent addresses\n\n\n  getShippingAddress(shippingAddress);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        id: \"addresses_dropdown\",\n        style: {\n          marginBlock: '1rem',\n          background: 'var(--color-main)'\n        },\n        children: \"Choose an address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        onClick: handleClick,\n        children: [addresses && addresses.map(address => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          id: address._id,\n          children: `${address.street_name} ${address.building_number} ${address.extension},\n                  ${address.post_code} ${address.city} - ${address.country}`\n        }, address._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)), shippingAddress && /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          id: \"new\",\n          children: \"Add new shipping address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), shippingAddress ? /*#__PURE__*/_jsxDEV(Card, {\n      style: cardStyles,\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"card-header\",\n        children: \"Shipping Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), shippingAddress && /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          children: `${shippingAddress.first_name ? shippingAddress.first_name : shippingAddress.last_name ? '' : user.first_name} \n                ${shippingAddress.last_name ? shippingAddress.last_name : shippingAddress.first_name ? '' : user.last_name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: `${shippingAddress.street_name} ${shippingAddress.building_number} ${shippingAddress.extension},`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: `${shippingAddress.post_code} ${shippingAddress.city} - ${shippingAddress.country}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), shippingAddress.comment && /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: `${shippingAddress.comment}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : // get it from the child component (addressForm) if the user choose to add new one\n    !shippingAddress && /*#__PURE__*/_jsxDEV(AddressForm, {\n      getNewAddress: getNewAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddressesDropdown, \"xlJvuL5i12/5g09Ox1W9gYKCYT0=\");\n\n_c = AddressesDropdown;\nconst cardStyles = {\n  marginBottom: '10px',\n  borderColor: 'var(--color-main)'\n};\nexport default AddressesDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressesDropdown\");","map":{"version":3,"sources":["C:/Users/Dee/Desktop/test-deploy/client/src/components/AddressesDropdown.js"],"names":["axios","Card","Dropdown","AddressForm","AuthContext","React","useState","useContext","useEffect","AddressesDropdown","getShippingAddress","user","addresses","setAddresses","shippingAddress","setShippingAddress","fetchAddresses","response","get","process","env","REACT_APP_API_URL","_id","data","handleClick","e","selectedAddress","find","address","target","id","getNewAddress","marginBlock","background","map","street_name","building_number","extension","post_code","city","country","cardStyles","first_name","last_name","comment","marginBottom","borderColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,iBAA/B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA4B;AAAA;;AACpD,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,UAAU,CAACH,WAAD,CAA3B;AAEA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,IAAD,CAAtD;AAEAE,EAAAA,SAAS,CAAC,MAAMQ,cAAc,EAArB,EAAyB,CAACF,eAAD,CAAzB,CAAT;;AAEA,QAAME,cAAc,GAAG,YAAY;AACjC,UAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,kBAAiBV,IAAI,CAACW,GAAI,EAArE,CAAvB;AAEAT,IAAAA,YAAY,CAACI,QAAQ,CAACM,IAAT,CAAcX,SAAf,CAAZ;AACD,GAJD;;AAMA,QAAMY,WAAW,GAAIC,CAAD,IAAO;AACzB,UAAMC,eAAe,GAAGd,SAAS,CAACe,IAAV,CAAgBC,OAAD,IAAaA,OAAO,CAACN,GAAR,KAAgBG,CAAC,CAACI,MAAF,CAASC,EAArD,CAAxB;AAEAf,IAAAA,kBAAkB,CAACW,eAAD,CAAlB;AACD,GAJD;;AAMA,QAAMK,aAAa,GAAIH,OAAD,IAAab,kBAAkB,CAACa,OAAD,CAArD,CApBoD,CAsBpD;;;AACAlB,EAAAA,kBAAkB,CAACI,eAAD,CAAlB;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAA,8BACE,QAAC,QAAD,CAAU,MAAV;AACE,QAAA,EAAE,EAAC,oBADL;AAEE,QAAA,KAAK,EAAE;AAAEkB,UAAAA,WAAW,EAAE,MAAf;AAAuBC,UAAAA,UAAU,EAAE;AAAnC,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,QAAD,CAAU,IAAV;AAAe,QAAA,OAAO,EAAET,WAAxB;AAAA,mBACGZ,SAAS,IACRA,SAAS,CAACsB,GAAV,CAAeN,OAAD,iBACZ,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,EAAE,EAAEA,OAAO,CAACN,GAA3B;AAAA,oBACI,GAAEM,OAAO,CAACO,WAAY,IAAGP,OAAO,CAACQ,eAAgB,IAAGR,OAAO,CAACS,SAAU;AACxF,oBAAoBT,OAAO,CAACU,SAAU,IAAGV,OAAO,CAACW,IAAK,MAAKX,OAAO,CAACY,OAAQ;AAF7D,WAAqCZ,OAAO,CAACN,GAA7C;AAAA;AAAA;AAAA;AAAA,gBADF,CAFJ,EASGR,eAAe,iBAAI,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,EAAE,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATtB;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAuBGA,eAAe,gBACd,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE2B,UAAb;AAAA,8BACE,QAAC,IAAD,CAAM,MAAN;AAAa,QAAA,SAAS,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG3B,eAAe,iBACd,QAAC,IAAD,CAAM,IAAN;AAAA,gCACE,QAAC,IAAD,CAAM,IAAN;AAAA,oBAAa,GACXA,eAAe,CAAC4B,UAAhB,GACI5B,eAAe,CAAC4B,UADpB,GAEI5B,eAAe,CAAC6B,SAAhB,GACA,EADA,GAEAhC,IAAI,CAAC+B,UACV;AACf,kBACkB5B,eAAe,CAAC6B,SAAhB,GACI7B,eAAe,CAAC6B,SADpB,GAEI7B,eAAe,CAAC4B,UAAhB,GACA,EADA,GAEA/B,IAAI,CAACgC,SACV;AAbH;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE,QAAC,IAAD,CAAM,IAAN;AAAA,oBAAa,GAAE7B,eAAe,CAACqB,WAAY,IAAGrB,eAAe,CAACsB,eAAgB,IAAGtB,eAAe,CAACuB,SAAU;AAA3G;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAkBE,QAAC,IAAD,CAAM,IAAN;AAAA,oBAAa,GAAEvB,eAAe,CAACwB,SAAU,IAAGxB,eAAe,CAACyB,IAAK,MAAKzB,eAAe,CAAC0B,OAAQ;AAA9F;AAAA;AAAA;AAAA;AAAA,gBAlBF,EAmBG1B,eAAe,CAAC8B,OAAhB,iBAA2B,QAAC,IAAD,CAAM,IAAN;AAAA,oBAAa,GAAE9B,eAAe,CAAC8B,OAAQ;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAnB9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADc,GA4Bd;AACA,KAAC9B,eAAD,iBAAoB,QAAC,WAAD;AAAa,MAAA,aAAa,EAAEiB;AAA5B;AAAA;AAAA;AAAA;AAAA,YApDxB;AAAA,kBADF;AAyDD,CAlFD;;GAAMtB,iB;;KAAAA,iB;AAoFN,MAAMgC,UAAU,GAAG;AACjBI,EAAAA,YAAY,EAAE,MADG;AAEjBC,EAAAA,WAAW,EAAE;AAFI,CAAnB;AAKA,eAAerC,iBAAf","sourcesContent":["import axios from 'axios';\r\nimport { Card, Dropdown } from 'react-bootstrap';\r\nimport AddressForm from '../components/AddressForm';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport React, { useState, useContext, useEffect } from 'react';\r\n\r\nconst AddressesDropdown = ({ getShippingAddress }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const [addresses, setAddresses] = useState(null);\r\n  const [shippingAddress, setShippingAddress] = useState(null);\r\n\r\n  useEffect(() => fetchAddresses(), [shippingAddress]);\r\n\r\n  const fetchAddresses = async () => {\r\n    const response = await axios.get(`${process.env.REACT_APP_API_URL}/addresses/all/${user._id}`);\r\n\r\n    setAddresses(response.data.addresses);\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    const selectedAddress = addresses.find((address) => address._id === e.target.id);\r\n\r\n    setShippingAddress(selectedAddress);\r\n  };\r\n\r\n  const getNewAddress = (address) => setShippingAddress(address);\r\n\r\n  // set it on the parent component (checkoutPage) if the user choose one of the recent addresses\r\n  getShippingAddress(shippingAddress);\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <Dropdown>\r\n        <Dropdown.Toggle\r\n          id=\"addresses_dropdown\"\r\n          style={{ marginBlock: '1rem', background: 'var(--color-main)' }}\r\n        >\r\n          Choose an address\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu onClick={handleClick}>\r\n          {addresses &&\r\n            addresses.map((address) => (\r\n              <Dropdown.Item id={address._id} key={address._id}>\r\n                {`${address.street_name} ${address.building_number} ${address.extension},\r\n                  ${address.post_code} ${address.city} - ${address.country}`}\r\n              </Dropdown.Item>\r\n            ))}\r\n\r\n          {shippingAddress && <Dropdown.Item id=\"new\">Add new shipping address</Dropdown.Item>}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n\r\n      {shippingAddress ? (\r\n        <Card style={cardStyles}>\r\n          <Card.Header className=\"card-header\">Shipping Address</Card.Header>\r\n          {shippingAddress && (\r\n            <Card.Body>\r\n              <Card.Text>{`${\r\n                shippingAddress.first_name\r\n                  ? shippingAddress.first_name\r\n                  : shippingAddress.last_name\r\n                  ? ''\r\n                  : user.first_name\r\n              } \r\n                ${\r\n                  shippingAddress.last_name\r\n                    ? shippingAddress.last_name\r\n                    : shippingAddress.first_name\r\n                    ? ''\r\n                    : user.last_name\r\n                }`}</Card.Text>\r\n\r\n              <Card.Text>{`${shippingAddress.street_name} ${shippingAddress.building_number} ${shippingAddress.extension},`}</Card.Text>\r\n\r\n              <Card.Text>{`${shippingAddress.post_code} ${shippingAddress.city} - ${shippingAddress.country}`}</Card.Text>\r\n              {shippingAddress.comment && <Card.Text>{`${shippingAddress.comment}`}</Card.Text>}\r\n            </Card.Body>\r\n          )}\r\n        </Card>\r\n      ) : (\r\n        // get it from the child component (addressForm) if the user choose to add new one\r\n        !shippingAddress && <AddressForm getNewAddress={getNewAddress} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst cardStyles = {\r\n  marginBottom: '10px',\r\n  borderColor: 'var(--color-main)',\r\n};\r\n\r\nexport default AddressesDropdown;\r\n"]},"metadata":{},"sourceType":"module"}